/// <reference types="node" />
import { EventEmitter } from 'events';
import Commander from '../lib/Commander';
import Logger from '../lib/Logger';
import PluginLoader from '../lib/PluginLoader';
import { Helper, ImgInfo, Config } from '../utils/interfaces';
import Request from '../lib/Request';
declare class PicGo extends EventEmitter {
    configPath: string;
    baseDir: string;
    helper: Helper;
    log: Logger;
    cmd: Commander;
    config: Config;
    output: ImgInfo[];
    input: any[];
    pluginLoader: PluginLoader;
    Request: Request;
    private lifecycle;
    constructor(configPath?: string);
    init(): void;
    registerCommands(): void;
    getConfig(name?: string): any;
    saveConfig(config: any): void;
    setConfig(config: any): void;
    upload(input?: any[]): Promise<void>;
}
export default PicGo;
