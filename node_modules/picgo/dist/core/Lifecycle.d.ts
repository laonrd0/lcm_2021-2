/// <reference types="node" />
import { EventEmitter } from 'events';
import PicGo from './PicGo';
import { Plugin } from '../utils/interfaces';
declare class Lifecycle extends EventEmitter {
    configPath: string;
    ctx: PicGo;
    constructor(ctx: PicGo);
    start(input: any[]): Promise<PicGo>;
    beforeTransform(ctx: PicGo): Promise<PicGo>;
    doTransform(ctx: PicGo): Promise<PicGo>;
    beforeUpload(ctx: PicGo): Promise<PicGo>;
    doUpload(ctx: PicGo): Promise<PicGo>;
    afterUpload(ctx: PicGo): Promise<PicGo>;
    handlePlugins(plugins: Plugin[], ctx: PicGo): Promise<PicGo>;
}
export default Lifecycle;
